# Configuracion de la base de datos H2
# Habilitar la consola de H2
spring.h2.console.enabled=true

# Par√°metros para conectarnos a una base de datos
# spring.datasource.url=jdbc:h2:mem:./betodb; INIT=CREATE SCHEMA IF NOT EXISTS RBAC
spring.datasource.url=jdbc:h2:mem:./betodb;
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Configuracion de JPA
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# El update le dice que si no existen las tablas que las cree y luego actualice
spring.jpa.hibernate.ddl-auto=update

# Muestra por la consola como se desarrollan las consultas SQL
spring.jpa.show-sql = true

# Puerto de ejecucion, donde escucha el server embebido
server.port=8080

# OPEN API
# https://parcial1jurman.onrender.com/swagger-ui/index.html  RENDER
# http://localhost:8080/swagger-ui/index.html  LOCAL
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# LEVANTAR H2
# http://localhost:8080/h2-console/

# Configuracion de la base de datos MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/db_persona

#spring.datasource.username=root
#spring.datasource.password=root1234

#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.open-in-view=false

#server.port=9000